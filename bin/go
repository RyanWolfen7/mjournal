#!/bin/bash
##### helper functions #####
autoinstall_wallah() {
  [[ -f wallah/bin/install_node ]] && return
  git submodule update --init --depth 1
}

autoinstall_npm_dependencies() {
  autoinstall_wallah
  ./wallah/bin/install_node
  [[ -d node_modules/express ]] && return
  npm install
}

autoinstall_bower_dependencies() {
  [[ -d bower_components/angular ]] && return
  ./node_modules/.bin/bower install
}

usage() {
  echo "Usage: $(basename $0) <subcommand> [args...]"
  cat <<EOF

Purpose of $(basename $0) script
--------------------

* entrypoint script for common commands
* Automatically installs development prerequisites
* Ensures the correct PATH environment variable
* commands are grouped by purpose/lifecycle and described in more detail below


Development Commands
--------------------

* express: start the express server
  * aliased as "start" command as well
* test: run all the tests (mocha)
* inspector: run node-inspector with the proper web port
* lint: run eslint code format checker

Deployment Commands
-------------------

* clean: delete the build directory
* build: build a distribution archive for deployment
EOF
  exit 1
}

##### development task functions #####
task::express() {
  autoinstall_npm_dependencies
  autoinstall_bower_dependencies
  node-dev --debug=9091 app/server | bunyan -o short
}

task::start() {
  task::express
}

task::test() {
  set -e
  args="--slow 200 --reporter spec --colors --recursive"
  if [[ "${1}" == "--debug" ]]; then
    args="${args} --timeout 0 --debug-brk=9093"
    shift
  fi
  tests="$@"
  if [[ -z "${tests}" ]]; then
    tests=$(find app -type f -name '*.mocha.js' | xargs)
  fi
  psql --username=mjournal --dbname=mjournal-test \
    --file=app/db/createSchema.sql 2>&1 \
    | egrep -v '(NOTICE|^DROP|^ALTER|^CREATE)' || true
  NODE_ENV=test mocha ${args} ${tests}
  task::lint
}

task::inspector() {
  exec node-inspector --web-port=9092
}

task::lint() {
  eslint app
}

##### deployment command functions #####
task::build() {
  autoinstall_npm_dependencies
  find app/components -type f -name \*.styl | xargs stylus
}

task::clean() {
  rm -rf ./build
}

##### main code #####
main() {
  cd $(dirname "$0")/..
  PATH="${PATH}:${PWD}/bin"
  PATH="${PATH}:${PWD}/node_modules/.bin"
  PATH="${PATH}:${PWD}/node/bin"
  #Need the basics like dirname et al
  PATH="${PATH}:/usr/bin:/bin"
  export PATH
  task_name="$1"
  if type "task::${task_name}" &>/dev/null; then
    shift
    eval "task::${task_name}" "$@"
  else
    usage "$@"
  fi
}

main "$@"
